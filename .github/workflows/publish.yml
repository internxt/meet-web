name: Publish to Cloudflare

on:
  push:
    branches: [ "main" ]
  pull_request:
  workflow_dispatch:

permissions:
  pull-requests: write
jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
      pull-requests: write
    name: Publish to Cloudflare Pages
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@internxt'

      - name: Configure NPM
        run: |
          echo "registry=https://registry.yarnpkg.com/" > .npmrc
          echo "@internxt:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PERSONAL_ACCESS_TOKEN }}" >> .npmrc
          echo "always-auth=true" >> .npmrc
          npm config set legacy-peer-deps true
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Install dependencies
        run: npm install --legacy-peer-deps
        env:
          NODE_AUTH_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Configure environment
        run: |
          touch .env
          echo DRIVE_NEW_API_URL="${{ secrets.DRIVE_NEW_API_URL }}" >> .env
          echo PAYMENTS_API_URL="${{ secrets.PAYMENTS_API_URL }}" >> .env
          echo MEET_API_URL="${{ secrets.MEET_API_URL }}" >> .env
          echo CRYPTO_SECRET="${{ secrets.CRYPTO_SECRET }}" >> .env
          echo MAGIC_IV="${{ secrets.MAGIC_IV }}" >> .env
          echo MAGIC_SALT="${{ secrets.MAGIC_SALT }}" >> .env
          echo JITSI_APP_ID="${{ secrets.JITSI_APP_ID }}" >> .env

      - name: Build application
        run: make compile deploy

      - name: Publish to Cloudflare Pages
        id: cloudflare
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: ${{ secrets.CLOUDFLARE_PROJECT_NAME }}
          directory: .
      - name: Comment Preview Link on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const deploymentUrl = '${{ steps.cloudflare.outputs.url }}';
            const previewUrl = deploymentUrl.replace('***', 'meet-web');

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸš€ **Preview Link**: ${previewUrl}`
            })